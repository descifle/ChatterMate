{"version":3,"sources":["component/auth/Login.js","component/Popover.js","component/Chat.js","component/Room.js","component/App.js","reportWebVitals.js","index.js"],"names":["Login","setUser","useState","username","setUsername","password","setPassword","renderUser","length","className","onSubmit","e","preventDefault","console","log","type","value","onChange","target","href","SimplePopover","users","React","anchorEl","setAnchorEl","open","Boolean","id","undefined","Button","aria-describedby","variant","color","onClick","event","currentTarget","Popover","onClose","anchorOrigin","vertical","horizontal","transformOrigin","map","user","index","socket","socketClient","Chat","message","setMessage","setUsers","chat","setChat","window","innerWidth","isDesktop","setIsDesktop","date","moment","format","updateMedia","useEffect","on","data","disconnect","emit","addEventListener","removeEventListener","renderMessages","item","setTimeout","msgContainer","document","querySelector","scrollHeight","scroll","fullMsg","time","AppBar","position","Toolbar","Typography","ListItem","button","text","axios","method","url","placeholder","Room","renderPage","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.320e653a.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport axios from 'axios'\r\nimport './login.scss'\r\n\r\nconst Login = ({ setUser }) => {\r\n    const [username, setUsername] = useState('')\r\n    const [password, setPassword] = useState('')\r\n\r\n    const validateSubmit = (e) => {\r\n        e.preventDefault()\r\n\r\n        if (username && password) {\r\n            console.log('this is me')\r\n\r\n            // setUser(username)\r\n\r\n            // axios({\r\n            //     method: 'POST',\r\n            //     data: {\r\n            //         username: username,\r\n            //         password: password,\r\n            //     },\r\n            //     withCredentials: true,\r\n            //     url: '/users/create',\r\n            // })\r\n            // .then(res => console.log(res))\r\n            // .catch(err => console.log(err))\r\n        }\r\n\r\n    }\r\n\r\n    // const googleLogin = () => {\r\n    //     axios({\r\n    //         method: 'GET',\r\n    //         url: \"/users/auth/google\",\r\n    //     })\r\n    // }\r\n\r\n    const renderUser = username.length > 0 ? `Welcome ${username}` : \"No info\"\r\n\r\n    return (\r\n        <div className=\"entry\">\r\n            <h1>ChatterMate</h1>\r\n            <div>\r\n                <h3>{renderUser}</h3>\r\n            </div>\r\n            <form onSubmit={validateSubmit} className=\"login\">\r\n                <div className=\"form-group\">\r\n                    <label >Username</label>\r\n                    <input type=\"text\" value={username} onChange={e => setUsername(e.target.value)} className=\"form-control\" />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label >Password</label>\r\n                    <input type=\"password\" value={password} onChange={e => setPassword(e.target.value)} className=\"form-control\" />\r\n                </div>\r\n\r\n                <button className=\"btn btn-danger btn-block\">Join</button>\r\n                <div className=\"divide-container\" ><hr className=\"short-divide\" /><span>or</span><hr className=\"short-divide\" /></div>\r\n                {/* <div onClick={() => { googleLogin() }} className=\"btn btn-user btn-block\">\r\n                    <i className=\"fa fa-google\"></i> Login with Google\r\n                </div> */}\r\n                <a href=\"/users/auth/google\" className=\"btn btn-user btn-block\">\r\n                    <i className=\"fa fa-google\"></i> Login with Google\r\n                </a>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Login","import React from 'react';\r\n// import { makeStyles } from '@material-ui/core/styles';\r\nimport Popover from '@material-ui/core/Popover';\r\n// import Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\n\r\n// const useStyles = makeStyles((theme) => ({\r\n//   typography: {\r\n//     padding: theme.spacing(2),\r\n//   },\r\n// }));\r\n\r\nexport default function SimplePopover({users}) {\r\n//   const classes = useStyles();\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n\r\n  const handleClick = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  const open = Boolean(anchorEl);\r\n  const id = open ? 'simple-popover' : undefined;\r\n\r\n  const renderUsers = () => {\r\n\r\n    if (users !== null) {\r\n        return users.map((user, index) => {\r\n\r\n            return <Button key={index}>\r\n                {user.user}\r\n            </Button>\r\n        })\r\n    } else {\r\n        return <div>\r\n            empty\r\n        </div>\r\n    }\r\n}\r\n\r\n  return (\r\n    <div className=\"online-users\">\r\n      <Button aria-describedby={id} variant=\"contained\" color=\"primary\" onClick={handleClick}>\r\n        Online\r\n      </Button>\r\n      <Popover\r\n        id={id}\r\n        open={open}\r\n        anchorEl={anchorEl}\r\n        onClose={handleClose}\r\n        anchorOrigin={{\r\n          vertical: 'bottom',\r\n          horizontal: 'center',\r\n        }}\r\n        transformOrigin={{\r\n          vertical: 'top',\r\n          horizontal: 'center',\r\n        }}\r\n      >\r\n        {/* <Typography className={classes.typography}>The content of the Popover.</Typography> */}\r\n        {renderUsers()}\r\n      </Popover>\r\n    </div>\r\n  );\r\n}","import React, { useState, useEffect } from 'react'\r\nimport socketClient from 'socket.io-client'\r\nimport moment from 'moment'\r\nimport Popover from './Popover'\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport AppBar from '@material-ui/core/AppBar'\r\nimport Toolbar from '@material-ui/core/Toolbar'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport axios from 'axios'\r\nimport './chat.scss'\r\n\r\nconst socket = socketClient('http://localhost:3001')\r\n\r\nconst Chat = ({ user }) => {\r\n    const [message, setMessage] = useState('')\r\n    const [users, setUsers] = useState([])\r\n    const [chat, setChat] = useState([])\r\n    const [isDesktop, setIsDesktop] = useState(window.innerWidth > 500)\r\n\r\n    const date = moment().format('h:mm')\r\n\r\n    const updateMedia = () => {\r\n        setIsDesktop(window.innerWidth > 500);\r\n    }\r\n\r\n    useEffect(() => {\r\n\r\n        // socket.on('connection', () => {\r\n\r\n        //     console.log(`${user} connected`)\r\n        // })\r\n\r\n        // saving the data from server into chat array\r\n        socket.on('message', data => {\r\n            setChat(chat => [...chat, data])\r\n        })\r\n\r\n        // shows all connected visitors from server\r\n        socket.on('visitors', (data) => {\r\n            setUsers(data)\r\n        })\r\n\r\n        return () => {\r\n            socket.disconnect()\r\n            console.log('disconnected')\r\n        }\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n\r\n        socket.emit('loggedUser', { user })\r\n\r\n    }, [user])\r\n\r\n    useEffect(() => {\r\n        window.addEventListener(\"resize\", updateMedia);\r\n        return () => window.removeEventListener(\"resize\", updateMedia);\r\n    });\r\n\r\n    const validateText = (text) => {\r\n        let validText = false\r\n        text.length < 1 && typeof text == 'string' ? validText = false : validText = true\r\n        return validText\r\n    }\r\n\r\n    const onMessageSubmit = (e) => {\r\n        e.preventDefault()\r\n\r\n        if (validateText(message)) {\r\n            const fullMsg = {\r\n                username: user,\r\n                message: message,\r\n                time: date\r\n            }\r\n\r\n            axios({\r\n                method: 'POST',\r\n                data: fullMsg,\r\n                url: '/chat/message'\r\n            })\r\n\r\n            socket.emit('message', { fullMsg })\r\n            setMessage('')\r\n        } else {\r\n            return\r\n        }\r\n    }\r\n\r\n    const renderUsers = () => {\r\n\r\n        if (users !== null) {\r\n            return users.map((user, index) => {\r\n\r\n                return (\r\n                    // <Button className=\"message-username\" key={index}>\r\n                    //     {user.user}\r\n                    // </Button>\r\n                    <ListItem button key={index}>\r\n                        {user.user}\r\n                    </ListItem>\r\n                )\r\n            })\r\n        } else {\r\n            return <div>\r\n                empty\r\n            </div>\r\n        }\r\n    }\r\n\r\n    const renderMessages = chat.map((item, index) => {\r\n\r\n        setTimeout(() => {\r\n            const msgContainer = document.querySelector('.message-container')\r\n            let scrollHeight = msgContainer.scrollHeight\r\n            msgContainer.scroll(0, scrollHeight)\r\n        }, 200)\r\n\r\n        return (\r\n            <div key={index} className={user === item.fullMsg.username ? \"message\" : \"other-message\"}>\r\n                <div>\r\n                    <span className={user === item.fullMsg.username ? \"message-username\" : \"text-white\"}>{item.fullMsg.username}</span>\r\n                    <span className=\"message-time\">{item.fullMsg.time}</span>\r\n                </div>\r\n                <p>{item.fullMsg.message}</p>\r\n\r\n            </div>\r\n        )\r\n    })\r\n\r\n    return (\r\n        <div className=\"chat-container container-fluid\">\r\n            <div className=\"row h-100\">\r\n                <div className=\"col-md-3 text-center\">\r\n                    <AppBar position=\"static\">\r\n                        <Toolbar>\r\n                            <Typography variant=\"h6\" >\r\n                                ChatterMate Instant Messaging\r\n                        </Typography>\r\n                            {/* <Button className=\"ml-auto\" color=\"inherit\">{user}</Button> */}\r\n                        </Toolbar>\r\n                    </AppBar>\r\n                    {isDesktop ? <div className=\"text-center\">{renderUsers()}</div> : <Popover users={users} />}\r\n                </div>\r\n                <div className=\"messages col-md-9\">\r\n                    <div className=\"message-container\">\r\n                        {renderMessages}\r\n                    </div>\r\n                    <form className=\"chatitself\" onSubmit={onMessageSubmit}>\r\n                        <div className=\"chat-bar\">\r\n                            <input className=\"write-message\" value={message} onChange={e => setMessage(e.target.value)} placeholder=\"type here to message\" />\r\n                            <button className=\"send-btn\">Send</button>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default Chat","import React, { useState } from 'react';\r\nimport Login from './auth/Login'\r\nimport Chat from './Chat'\r\n\r\nconst Room = () => {\r\n    const [user, setUser] = useState('')\r\n\r\n    const renderPage = user ? <Chat user={user} /> : <Login setUser={setUser} />\r\n\r\n    return (\r\n        <div className=\"kekw\">\r\n           {renderPage}\r\n        </div>\r\n       \r\n    )\r\n}\r\n\r\nexport default Room","import React from 'react';\r\nimport Room from './Room'\r\n\r\nconst App = () => {\r\n    return (\r\n        <Room />\r\n    )\r\n}\r\n\r\nexport default App","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './component/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}